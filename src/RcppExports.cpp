// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// feynman_hist
DataFrame feynman_hist(const NumericVector x, const NumericVector samples_widths, const int max_nb_samples, const int verbose);
RcppExport SEXP _NeutronNoise_feynman_hist(SEXP xSEXP, SEXP samples_widthsSEXP, SEXP max_nb_samplesSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type samples_widths(samples_widthsSEXP);
    Rcpp::traits::input_parameter< const int >::type max_nb_samples(max_nb_samplesSEXP);
    Rcpp::traits::input_parameter< const int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(feynman_hist(x, samples_widths, max_nb_samples, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NeutronNoise_feynman_hist", (DL_FUNC) &_NeutronNoise_feynman_hist, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_NeutronNoise(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
