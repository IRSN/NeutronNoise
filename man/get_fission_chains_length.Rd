% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{get_fission_chains_length}
\alias{get_fission_chains_length}
\title{Generate virtual fission chains length}
\usage{
get_fission_chains_length(n, fission_multiplicity, k, seed = 1L)
}
\arguments{
\item{n}{Number of virtual fission chains simulated.}

\item{fission_multiplicity}{A DataFrame containing the number (nu column) and the probability (pdf column) of 
of generated neutron per fission.}

\item{k}{System multiplication (between 0 and 0.99).}

\item{seed}{Seed of the random generator.}
}
\value{
A list containing:
- the mean nu value, 
- the fission probability,
- the chains lengths.
}
\description{
This function makes it possible to obtain the lengths of virtual fission chains. 
The length of a fission chain is defined as the total number of neutrons contained 
in it (this also includes the neutrons of the source event).
The algorithm works as follows:
- a first source fission is generated and eventually produces child neutrons.
- Each child neutron performs or not a fission with a probability and eventually produces child neutrons.
- The previous step is repeated until there are no more child neutrons.
The number of generated child neutrons depends on the multiplicity parameter.
Delayed neutrons are not taken into account.
}
\examples{
get_fission_chains_length(fission_multiplicity = data.frame(nu = 0:2, pdf = c(0.1,0.2,0.3)), 
n = 5, k = 0.7)

}
